* Praxis - Prayers, Readings and Fasting

This is an [Expo](https://expo.dev) project created with [`create-expo-app`](https://www.npmjs.com/package/create-expo-app).
**Careful**, this app is still under development

** Description
This is a universal mobile app (Android and iOS) for Christians to quickly have access to their daily prayers, scripture readings, and fasting calendar. This current version contains only the Eastern Orthodox daily prayers and calendar, but I intend on adding catholic prayers later on.

** Tasks
*** Content
**** TODO Find source of the API to see if must do my own
- So. Seems like the API is closed source and actually gets from Antiochian. Try to get direct source first.
- Probably won't be open source, so technique will be to translate
- Another method could be to generate an ical and take from that ical. Like transform the ical to jason.
- *A server will need to be set*, at least in firebase, so that I can keep either updating the ical OR, create my own API.
- Another option is having the entire liturgical logic running directly on the app.
- Basically, start with json file, turn into API with firebase, then make a code to update automatically on server.
**** TODO Make the API work in english
**** TODO Give the API a decent UI
**** TODO Translate the API by forking
**** TODO Add info page
**** TODO Add credits
**** TODO Add other prayer pages (later. Start with confession and common prayers)
**** TODO Add date picker
*** UI
**** TODO Find way to reload date
**** TODO New UI with RNRC. Two dimensional.
**** TODO Make buttons big with icons.
*** Extras
**** TODO Add a selection of prayer rules, or choice to build your personal. Or just a guide about prayer rules.

** Contains
- Orthodox Morning and Evening prayers
- Orthodox daily readings, life of the saints, and fasting calendar
- Languages:
  - English
  - Portuguese
- Calendars:
  - Gregorian
  - Julian

** Coming later
- Psalter
- Bible

** Get started

1. Clone git repo

2. Install dependencies

   ```bash
   npm install
   ```

3. Start the app

   ```bash
    npx expo start
   ```

In the output, you'll find options to open the app in a

- [development build](https://docs.expo.dev/develop/development-builds/introduction/)
- [Android emulator](https://docs.expo.dev/workflow/android-studio-emulator/)
- [iOS simulator](https://docs.expo.dev/workflow/ios-simulator/)
- [Expo Go](https://expo.dev/go), a limited sandbox for trying out app development with Expo

You can start developing by editing the files inside the **app** directory. This project uses [file-based routing](https://docs.expo.dev/router/introduction).


## Learn more

To learn more about developing your project with Expo, look at the following resources:

- [Expo documentation](https://docs.expo.dev/): Learn fundamentals, or go into advanced topics with our [guides](https://docs.expo.dev/guides).
- [Learn Expo tutorial](https://docs.expo.dev/tutorial/introduction/): Follow a step-by-step tutorial where you'll create a project that runs on Android, iOS, and the web.

## Join the Expo community

Join our community of developers creating universal apps.

- [Expo on GitHub](https://github.com/expo/expo): View our open source platform and contribute.
- [Discord community](https://chat.expo.dev): Chat with Expo users and ask questions.
